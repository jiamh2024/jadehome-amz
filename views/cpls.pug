//- views/competitors.pug
doctype html
html(lang="zh-CN")
  head
    title 竞品信息查询
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet")
    link(href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet")
    style.
      .container-main {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
      }
      .table-actions {
        white-space: nowrap;
      }
      .header-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
      }
      .loading-spinner {
        display: none;
        width: 3rem;
        height: 3rem;
      }
      .battery-icon {
        color: #28a745;
      }
      .product-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
        cursor: pointer;
      }
      .image-modal-img {
        max-width: 90%;
        max-height: 80vh;
      }

  body
    .container.container-main
      .header-section
        h1 
          i.bi.bi-clipboard-data
          span.ms-2 竞品信息查询
        a.btn.btn-primary(href="/cpadd") 
          i.bi.bi-plus-circle
          span.ms-2 新增竞品

      .card
        .card-body
          .d-flex.justify-content-center.mb-4
            .spinner-border.loading-spinner.text-primary(role="status")
              span.visually-hidden 加载中...

          table#competitorsTable.table.table-striped.table-hover(style="display: none")
            thead
              tr
                th 产品图片
                th 产品规格
                th 品牌
                th ASIN
                th 国家
                th 价格
                th 尺寸(L×W×H)
                th 重量
                th 带电
                th 操作
            tbody

      #deleteModal.modal.fade(tabindex="-1")
        .modal-dialog
          .modal-content
            .modal-header
              h5.modal-title 确认删除
              button.btn-close(type="button" data-bs-dismiss="modal" aria-label="关闭")
            .modal-body
              p 确定要删除这条竞品记录吗？
              p#competitorToDelete.text-danger.fw-bold
            .modal-footer
              button.btn.btn-secondary(type="button" data-bs-dismiss="modal") 取消
              button#confirmDelete.btn.btn-danger(type="button") 确认删除

      #imageModal.modal.fade(tabindex="-1")
        .modal-dialog.modal-lg
          .modal-content
            .modal-header
              h5.modal-title 产品图片
              button.btn-close(type="button" data-bs-dismiss="modal" aria-label="关闭")
            .modal-body.d-flex.justify-content-center.align-items-center
              img#modalImage.image-modal-img(src="" alt="产品大图")

    script(src="https://code.jquery.com/jquery-3.7.0.min.js")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
    script(src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js")
    script(src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js")
    script.
      $(document).ready(function() {
        // 初始化模态框
        const imageModal = new bootstrap.Modal('#imageModal');
        
        // 初始化DataTable
        const table = $('#competitorsTable').DataTable({
          responsive: true,
          language: {
            url: 'https://cdn.datatables.net/plug-ins/1.13.6/i18n/zh.json'
          },
          columns: [
            {
              data: 'image_url_1',
              render: function(data, type, row) {
                if (data) {
                  // 如果有图片，显示缩略图并支持点击查看大图
                  return `<img class="product-image" src="${data}" alt="产品图片" data-full-src="${data}">`;
                } else {
                  // 如果没有图片，显示默认图标
                  return '<i class="bi bi-image text-muted" style="font-size: 2rem;"></i>';
                }
              }
            },
            { data: 'product_name' },
            { data: 'brand' },
            // 修改ASIN列为超链接
            {
              data: 'asin', 
              defaultContent: '-',
              render: function(data, type, row) {
                if (!data) return '-';
                
                // 根据国家代码构建亚马逊链接
                let baseUrl = 'https://www.amazon.com'; // 默认美国站点
                
                switch(row.country_code) {
                  case 'UK':
                    baseUrl = 'https://www.amazon.co.uk';
                    break;
                  case 'US':
                    baseUrl = 'https://www.amazon.com';
                    break;
                  case 'CA':
                    baseUrl = 'https://www.amazon.ca';
                    break;
                  case 'AE':
                    baseUrl = 'https://www.amazon.ae';
                    break;
                  case 'SA':
                    baseUrl = 'https://www.amazon.sa';
                  // 可以根据需要添加更多国家
                }
                
                const amazonUrl = `${baseUrl}/dp/${data}`;
                return `<a href="${amazonUrl}" target="_blank" rel="noopener noreferrer">${data}</a>`;
              }
            },
            { data: 'country_code' },
            {
              data: 'sale_price',
              render: function(data) {
                return '¥' + parseFloat(data).toFixed(2);
              }
            },
            {              
              data: null,
              render: function(data) {
                const dimensions = [];
                
                // 根据国家代码决定显示单位
                if (data.country_code === 'US') {
                  // 美国显示英寸
                  if (data.length) dimensions.push((parseFloat(data.length) / 2.54).toFixed(2) + 'in');
                  if (data.width) dimensions.push((parseFloat(data.width) / 2.54).toFixed(2) + 'in');
                  if (data.height) dimensions.push((parseFloat(data.height) / 2.54).toFixed(2) + 'in');
                } else {
                  // 其他国家显示厘米/mm
                  if (data.length) dimensions.push(data.length + 'cm');
                  if (data.width) dimensions.push(data.width + 'mm');
                  if (data.height) dimensions.push(data.height + 'cm');
                }
                
                return dimensions.join(' × ') || '-';
              }
            },
            {
              data: 'weight',
              render: function(data, type, row) {
                // 根据国家代码决定显示单位
                if (row.country_code === 'US' && data) {
                  // 美国显示磅
                  return (parseFloat(data) / 0.45359237).toFixed(2) + 'lb';
                }
                // 其他国家显示千克
                return data ? data + 'kg' : '-';
              }
            },
            {
              data: 'has_battery',
              render: function(data) {
                return data ? '<i class="bi bi-battery-full battery-icon"></i>' : '-';
              }
            },
            {              
              data: null,              
              orderable: false,              
              // 在操作列的render函数中，详情和删除按钮之间添加编辑按钮              
              render: function(data) {                
                // 构建成本计算的URL参数
                const profitUrl = `/profit?product_id=${data.id}&product_name=${encodeURIComponent(data.product_name)}&brand=${encodeURIComponent(data.brand)}&country_code=${data.country_code}&length=${data.length || 0}&width=${data.width || 0}&height=${data.height || 0}&weight=${data.weight || 0}&sale_price=${data.sale_price || 0}`;
                
                return `                  
                  <div class="table-actions">                    
                    <a href="/cp-edit/${data.id}" class="btn btn-sm btn-primary me-1" title="编辑信息">                       
                      <i class="bi bi-pencil"></i>                     
                    </a>                    
                    <a href="${profitUrl}" class="btn btn-sm btn-info me-1" title="成本计算">
                      <i class="bi bi-calculator"></i>
                    </a>
                    <button class="btn btn-sm btn-danger delete-btn" data-id="${data.id}" data-name="${data.product_name}" title="删除">                       
                      <i class="bi bi-trash"></i>                     
                    </button>                   
                  </div>                
                `;              
              }            
            }
          ]
        });

        // 点击图片查看大图
        $(document).on('click', '.product-image', function() {
          const fullSrc = $(this).data('full-src');
          $('#modalImage').attr('src', fullSrc);
          imageModal.show();
        });

        // 显示加载动画
        $('.loading-spinner').show();

        // 从API加载数据
        fetch('/api/cp')
          .then(response => response.json())
          .then(data => {
            table.clear().rows.add(data).draw();
            $('#competitorsTable').show();
          })
          .catch(error => {
            console.error('加载数据失败:', error);
            showAlert('danger', '错误', '加载竞品数据失败，请刷新重试');
          })
          .finally(() => {
            $('.loading-spinner').hide();
          });

        // 删除功能
        let competitorToDelete = null;
        const deleteModal = new bootstrap.Modal('#deleteModal');

        $(document).on('click', '.delete-btn', function() {
          competitorToDelete = {
            id: $(this).data('id'),
            name: $(this).data('name')
          };
          $('#competitorToDelete').text(`${competitorToDelete.name} (ID: ${competitorToDelete.id})`);
          deleteModal.show();
        });

        $('#confirmDelete').click(async function() {
          if (!competitorToDelete) return;
          
          try {
            const response = await fetch(`/api/cp/${competitorToDelete.id}`, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              }
            });

            if (response.ok) {
              // 重新加载数据
              const refreshResponse = await fetch('/api/cp');
              const newData = await refreshResponse.json();
              table.clear().rows.add(newData).draw();
              
              showAlert('success', '成功', '竞品删除成功');
            } else {
              const result = await response.json();
              showAlert('danger', '错误', result.error || '删除竞品失败');
            }
          } catch (error) {
            console.error('删除失败:', error);
            showAlert('danger', '错误', '服务器连接失败');
          } finally {
            deleteModal.hide();
            competitorToDelete = null;
          }
        });

        // 显示提示信息
        function showAlert(type, title, message) {
          const alertHtml = `
            <div class="alert alert-${type} alert-dismissible fade show position-fixed top-0 end-0 m-3" role="alert" style="z-index: 1100">
              <strong>${title}</strong> ${message}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          `;
          $('body').append(alertHtml);
          setTimeout(() => $('.alert').alert('close'), 5000);
        }
      });