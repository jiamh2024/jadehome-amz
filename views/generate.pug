doctype html
html(lang='zh-CN')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title 生成发货标签 - JadeHome
    link(rel='stylesheet', href='/bootstrap.css')
    link(rel='stylesheet', href='/style.css')
    script(src='https://fastly.jsdelivr.net/npm/axios/dist/axios.min.js')
    script(src='https://fastly.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js')
    style.
      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        background-color: #f8f9fa;
      }
      .label-generator-container {
        display: flex;
        min-height: calc(100vh - 100px);
        gap: 20px;
        margin-top: 20px;
      }
      .selection-panel {
        width: 350px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 24px;
        position: sticky;
        top: 20px;
        height: fit-content;
      }
      .preview-panel {
        flex: 1;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 24px;
      }
      .form-group {
        margin-bottom: 20px;
      }
      .form-group label {
        display: block;
        font-weight: 500;
        margin-bottom: 8px;
        color: #495057;
      }
      .form-select, .form-control {
        border-radius: 6px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      }
      .form-select:focus, .form-control:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
      }
      .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        width: 100%;
        margin-bottom: 10px;
        font-weight: 500;
        padding: 10px;
        border-radius: 6px;
        transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      }
      .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
      }
      .btn-secondary {
        width: 100%;
        padding: 10px;
        border-radius: 6px;
      }
      .section-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 20px;
        color: #212529;
        padding-bottom: 10px;
        border-bottom: 2px solid #e9ecef;
      }
      .preview-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 20px;
        color: #212529;
      }
      .label-container {
        border: 1px solid #000;
        padding: 1mm;
        margin: 0 auto;
        font-family: Arial, sans-serif;
        position: relative;
        background-color: white;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        /* 尺寸将通过JavaScript根据模板动态设置 */
      }
      .label-title {
        font-size: 13px;
        font-family: 'Impact, Charcoal, sans-serif';
        font-weight: bold;
        text-align: center;
        margin-bottom: 8px;
      }
      /* 主要内容区域 - 左右布局 */
      .label-main-content {
        display: flex;
        justify-content: space-between;
        margin-bottom: -9mm;
        height: 30mm;
        width: 78mm;
      }
      .label-left-section {
        width: 25%;
        margin-left: 1mm;
        display: flex;
        flex-direction: column;
        justify-content: center;
      }
      .label-info {
        font-size: 8px;
        font-family: 'Impact, Charcoal, sans-serif';
      }
      .label-right-section {
        width: 70%;
        display: flex;
        justify-content: center;
      }
      #barcodeText {
        width: 100%;
        height: 40px;
        font-size: 12px;
        font-weight:400;
      }
      /* 底部区域 - 左右布局 */
      .label-bottom-section {
        justify-content: space-between;
        position: relative;
        display: flex;
      }
      .label-bottom-left {
        width: 30%;
        font-family: 'Impact, Charcoal, sans-serif';
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        font-size: 10px;
        font-weight: 800;
        text-align: center;
      }
      .label-bottom-right {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        width: 60%;
        height: 50%;
      }
      /* 调整公司信息和二维码布局 */
      .company-info {
        text-align: right;
        margin-right: 10px;
      }
      .qr-code {
        position: absolute;
        top: 35px;
        right: -124px;
        width: 100mm;
        height: 15mm;
      }
      #companyEmail {
        text-align: left;
        font-size: 12px;
        margin-bottom: -2px;
        width: 160px;
      }
      #companyWebsite {
        text-align: left;
        font-size: 12px;
        margin-bottom: 5px;
        width: 180px;;
      }
      .barcode-container {
        margin: 0 0;
        text-align: center;
      }
      .qr-code-text {
        position: absolute;
        font-size: 10px;
        top: 69px;
        right: 47px;
      }

      @media print {
        body * {
          visibility: hidden;
        }
        .label-container, .label-container * {
          visibility: visible;
        }
        .label-container {
          position: absolute;
          left: 0;
          top: 0;
          border: none;
          width: 100%;
          height: 100%;
          display: block;
        }
        /* 确保新的布局在打印时也能正确显示 */
        .label-main-content,
        .label-bottom-section,
        .label-left-section,
        .label-right-section,
        .label-bottom-left,
        .label-bottom-right {
          display: flex;
          position: static !important;
        }
      }
      /* 响应式设计 */
      @media (max-width: 992px) {
        .label-generator-container {
          flex-direction: column;
        }
        .selection-panel {
          width: 100%;
          position: static;
        }
      }
  body
    .container.container-main
      h1.mb-4
        i.bi.bi-tag
        span.ms-2 生成发货标签
      
      .label-generator-container
        // 左侧选择区域
        .selection-panel
          div.section-title 选择参数
          
          // SKU标签选择
          .form-group
            label(for='skuLabelSelect') SKU标签选择
            select#skuLabelSelect.form-select
              option(value='') -- 请选择SKU标签 --
              each skuLabel in skuLabels
                option(value=skuLabel.id)= `${skuLabel.sku_code} - ${skuLabel.product_name} (${skuLabel.country_name})`
          
          // 标签模板选择
          .form-group
            label(for='labelTemplateSelect') 选择标签模板
            select#labelTemplateSelect.form-select
              option(value='') -- 请选择标签模板 --
              each template in labelTemplates
                option(value=template.id)= `模板 ${template.id} (${template.length}x${template.width}mm)`
          
          // 操作按钮
          button#generateBtn.btn.btn-primary 生成标签
          button#printBtn.btn.btn-secondary 打印标签
        
        // 右侧预览区域
        .preview-panel
          div.preview-title 标签预览
          
          #loadingIndicator.style('display: none; text-align: center; padding: 50px;')
            i.bi.bi-spinner.bi-spin(style='font-size: 3rem; color: #007bff;')
            p.mt-2 正在生成标签...
          
          #labelPreview
            .label-container
              // 1. 标题区域 - 黑体，大字体
              div.label-title#productName 产品名称
              
              // 2. 主要内容区域
              .label-main-content
                // 左侧区域 - 产品规格信息Example
                .label-left-section
                  div.label-info#modelInfo TextExample: 
                
                // 右侧区域 - 条码
                .label-right-section
                  div.barcode-container
                    svg#barcode
                    div#barcodeText
              
              // 3. 底部区域
              .label-bottom-section
                // 左下 - 中国制造和生产日期
                .label-bottom-left
                  div.label-info#madeInfo MADE IN CHINA
                  div.label-info#pdInfo PD:28-SEP-25
                
                // 右下 - 品牌logo，邮箱，网址和二维码
                .label-bottom-right
                  div.company-info
                    img#companyLogo(src='' alt='公司Logo' style='max-width: 150px; margin-bottom: 5px;')
                    div#companyEmail Email: support@homina.top
                    div#companyWebsite Web: http://www.homina.top
      
    script.
      document.addEventListener('DOMContentLoaded', function() {
        const skuLabelSelect = document.getElementById('skuLabelSelect');
        const labelTemplateSelect = document.getElementById('labelTemplateSelect');
        const generateBtn = document.getElementById('generateBtn');
        const printBtn = document.getElementById('printBtn');
        const loadingIndicator = document.getElementById('loadingIndicator');
        const labelPreview = document.getElementById('labelPreview');
        
        // 标签模板缓存
        const labelTemplateCache = {};
        
        // 解析URL参数
        function getUrlParams() {
          const params = {};
          const queryString = window.location.search;
          const urlParams = new URLSearchParams(queryString);
          
          urlParams.forEach((value, key) => {
            params[key] = value;
          });
          
          return params;
        }
        
        // 从选择的模板ID获取模板对象
        function getTemplateById(id) {
          if (!id) return null;
          return labelTemplates.find(template => template.id == id);
        }
        
        // 选择变化时启用/禁用生成按钮
        function checkFormValidity() {
          generateBtn.disabled = !(skuLabelSelect.value && labelTemplateSelect.value);
        }
        
        // 监听选择变化
        skuLabelSelect.addEventListener('change', checkFormValidity);
        labelTemplateSelect.addEventListener('change', checkFormValidity);
        
        // 初始化按钮状态
        checkFormValidity();
        
        // 检查URL参数并自动填充
        function checkAndFillUrlParams() {
          const urlParams = getUrlParams();
          if (urlParams.id) {
            // 如果有ID参数，直接使用ID获取SKU标签详情
            // 自动选择对应的SKU标签
            for (let i = 0; i < skuLabelSelect.options.length; i++) {
              if (skuLabelSelect.options[i].value == urlParams.id) {
                skuLabelSelect.selectedIndex = i;
                break;
              }
            }
            
            // 重新检查表单有效性
            checkFormValidity();
            
            // 如果所有必填字段都已填充，则自动生成标签
            if (!generateBtn.disabled) {
              // 稍微延迟一下，确保DOM已经完全渲染
              setTimeout(() => {
                generateBtn.click();
              }, 500);
            }
          } else if (urlParams.sku_code && urlParams.country_code) {
            // 兼容旧的参数方式
            // 根据sku_code和country_code查找对应的sku_label
            axios.get('/api/sku-label', {
              params: {
                sku_code: urlParams.sku_code,
                country_code: urlParams.country_code
              }
            })
            .then(function(response) {
              if (response.data.success && response.data.data && response.data.data.length > 0) {
                const skuLabel = response.data.data[0];
                // 自动选择对应的SKU标签
                for (let i = 0; i < skuLabelSelect.options.length; i++) {
                  if (skuLabelSelect.options[i].value == skuLabel.id) {
                    skuLabelSelect.selectedIndex = i;
                    break;
                  }
                }
                
                // 重新检查表单有效性
                checkFormValidity();
                
                // 如果所有必填字段都已填充，则自动生成标签
                if (!generateBtn.disabled) {
                  // 稍微延迟一下，确保DOM已经完全渲染
                  setTimeout(() => {
                    generateBtn.click();
                  }, 500);
                }
              }
            })
            .catch(function(error) {
              console.error('获取SKU标签详情失败:', error);
            });
          }
        }
        
        // 确保页面完全加载后再执行URL参数检查
        window.addEventListener('load', checkAndFillUrlParams);
        
        // 生成标签按钮点击事件
        generateBtn.addEventListener('click', function() {
          const skuLabelId = skuLabelSelect.value;
          const labelTemplateId = labelTemplateSelect.value;
          
          if (!skuLabelId) {
            showMessage('请选择SKU标签', 'danger');
            return;
          }
          
          if (!labelTemplateId) {
            showMessage('请选择标签模板', 'danger');
            return;
          }
          
          // 显示加载状态
          showLoading();
          
          // 获取SKU标签详情
          axios.get(`/api/sku-label/${skuLabelId}`)
            .then(function(skuLabelResponse) {
              // 检查响应数据是否存在
              if (!skuLabelResponse.data) {
                throw new Error('无效的SKU标签数据响应: 无响应数据');
              }
              
              if (!skuLabelResponse.data.success) {
                throw new Error(skuLabelResponse.data.message || '获取SKU标签失败');
              }
              
              if (!skuLabelResponse.data.data) {
                throw new Error('无效的SKU标签数据响应: 数据为空');
              }
              
              const skuLabel = skuLabelResponse.data.data;
              
              // 检查skuLabel对象是否存在
              if (!skuLabel) {
                throw new Error('未找到SKU标签数据');
              }
              
              // 获取标签模板详情
              return axios.get(`/api/label/${labelTemplateId}`)
                .then(function(templateResponse) {
                  // 检查模板响应数据是否存在
                  if (!templateResponse.data || !templateResponse.data.data) {
                    throw new Error('无效的标签模板数据响应');
                  }
                  
                  const template = templateResponse.data.data;
                  
                  // 缓存模板数据
                  labelTemplateCache[labelTemplateId] = template;
                  
                  // 填充标签信息 - 标题包含产品名称和国家
                  document.getElementById('productName').textContent = (skuLabel.title || '产品名称') + ' - ' + (skuLabel.country_code || '未知国家');
                  document.getElementById('modelInfo').innerHTML = skuLabel.left_text || 'N/A';
                  
                  // 添加国家信息
                  document.getElementById('madeInfo').textContent = `MADE IN CHINA`;
                  
                  // 处理生产日期
                  if (skuLabel.production_date) {
                    // 将ISO日期格式转换为"DD-MMM-YY"格式
                    const date = new Date(skuLabel.production_date);
                    const options = { day: '2-digit', month: 'short', year: '2-digit' };
                    const formattedDate = date.toLocaleDateString('en-GB', options).replace(/ /g, '-').toUpperCase();
                    document.getElementById('pdInfo').textContent = `PD:${formattedDate}`;
                  } else {
                    document.getElementById('pdInfo').textContent = 'PD:N/A';
                  }
                  
                  // 应用标签模板设置 - 设置标签尺寸
                  const labelContainer = document.querySelector('.label-container');
                  labelContainer.style.width = template.length + 'mm';
                  labelContainer.style.height = template.width + 'mm';
                  
                  // 应用Logo设置
                  if (template.logo_path) {
                    // 如果模板中有logo_path，则显示对应的图片
                    if (template.logo_path === 'homina' || template.logo_path === 'logo') {
                      document.getElementById('companyLogo').src = '/images/' + template.logo_path + '.png';
                    } else {
                      document.getElementById('companyLogo').src = '/images/' + template.logo_path + '.png';
                    }
                    document.getElementById('companyLogo').style.display = 'block';
                  } else {
                    document.getElementById('companyLogo').style.display = 'none';
                  }
                  
                  if (template.email) {
                    document.getElementById('companyEmail').textContent = `Email: ${template.email}`;
                  } else {
                    document.getElementById('companyEmail').textContent = 'Email: support@homina.top';
                  }
                  
                  if (template.website) {
                    document.getElementById('companyWebsite').textContent = `Web: ${template.website}`;
                  } else {
                    document.getElementById('companyWebsite').textContent = 'Forum: http://www.homina.top';
                  }
                  
                  // 生成条形码 - 使用fnsku
                  const barcodeValue = skuLabel.fnsku || skuLabel.sku_code;
                  document.getElementById('barcodeText').textContent = barcodeValue;
                  JsBarcode('#barcode', barcodeValue, {
                    width: 1.3,
                    height: 30,
                    displayValue: false
                  });
                  
                  // 隐藏加载状态，显示预览
                  hideLoading();
                  showMessage('标签生成成功！', 'success');
                  
                  // 启用打印按钮
                  printBtn.disabled = false;
                });
            })
            .catch(function(error) {
              console.error('生成标签失败:', error);
              hideLoading();
              // 提供更详细的错误信息
              const errorMessage = error.response && error.response.data && error.response.data.message 
                ? `生成标签失败: ${error.response.data.message}` 
                : '生成标签失败，请重试';
              showMessage(errorMessage, 'danger');
            });
        });
        
        printBtn.addEventListener('click', function() {
          // 检查是否已生成标签
          if (!document.getElementById('productName').textContent || document.getElementById('productName').textContent === '产品名称') {
            showMessage('请先生成标签', 'warning');
            return;
          }
          
          // 记录打印历史
          const skuLabelId = skuLabelSelect.value;
          const labelTemplateId = labelTemplateSelect.value;
          
          // 静默提交打印记录（不阻塞打印流程）
          axios.post('/api/print-log', {
            sku_label_id: skuLabelId,
            label_template_id: labelTemplateId,
            printed_at: new Date().toISOString()
          }).catch(function(error) {
            console.error('记录打印日志失败:', error);
            // 不影响打印功能
          });
          
          window.print();
        });
        
        // 显示加载状态
        function showLoading() {
          loadingIndicator.style.display = 'block';
          labelPreview.style.display = 'none';
          generateBtn.disabled = true;
          generateBtn.textContent = '生成中...';
        }
        
        // 隐藏加载状态
        function hideLoading() {
          loadingIndicator.style.display = 'none';
          labelPreview.style.display = 'block';
          generateBtn.disabled = false;
          generateBtn.textContent = '生成标签';
        }
        
        // 显示消息提示
        function showMessage(message, type = 'info') {
          // 检查是否已有消息容器
          let messageContainer = document.getElementById('messageContainer');
          if (!messageContainer) {
            messageContainer = document.createElement('div');
            messageContainer.id = 'messageContainer';
            messageContainer.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 1050; min-width: 300px; max-width: 500px;';
            document.body.appendChild(messageContainer);
          }
          
          // 创建消息元素
          const msg = document.createElement('div');
          msg.className = `alert alert-${type} alert-dismissible fade show`;
          msg.role = 'alert';
          msg.textContent = message;
          
          // 添加关闭按钮
          const closeBtn = document.createElement('button');
          closeBtn.type = 'button';
          closeBtn.className = 'btn-close';
          closeBtn.setAttribute('data-bs-dismiss', 'alert');
          closeBtn.ariaLabel = 'Close';
          msg.appendChild(closeBtn);
          
          // 清空现有消息并添加新消息
          messageContainer.innerHTML = '';
          messageContainer.appendChild(msg);
          
          // 3秒后自动隐藏
          setTimeout(() => {
            msg.classList.remove('show');
            msg.classList.add('fade');
            setTimeout(() => {
              msg.remove();
            }, 500);
          }, 3000);
        }
      });