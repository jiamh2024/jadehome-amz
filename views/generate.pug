doctype html
html(lang='zh-CN')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title 生成发货标签 - JadeHome
    link(rel='stylesheet', href='/bootstrap.css')
    link(rel='stylesheet', href='/style.css')
    script(src='https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js')
    script(src='https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js')
    style.
      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        background-color: #f8f9fa;
      }
      .label-generator-container {
        display: flex;
        min-height: calc(100vh - 100px);
        gap: 20px;
        margin-top: 20px;
      }
      .selection-panel {
        width: 350px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 24px;
        position: sticky;
        top: 20px;
        height: fit-content;
      }
      .preview-panel {
        flex: 1;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 24px;
      }
      .form-group {
        margin-bottom: 20px;
      }
      .form-group label {
        display: block;
        font-weight: 500;
        margin-bottom: 8px;
        color: #495057;
      }
      .form-select, .form-control {
        border-radius: 6px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      }
      .form-select:focus, .form-control:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
      }
      .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        width: 100%;
        margin-bottom: 10px;
        font-weight: 500;
        padding: 10px;
        border-radius: 6px;
        transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
      }
      .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
      }
      .btn-secondary {
        width: 100%;
        padding: 10px;
        border-radius: 6px;
      }
      .section-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 20px;
        color: #212529;
        padding-bottom: 10px;
        border-bottom: 2px solid #e9ecef;
      }
      .preview-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 20px;
        color: #212529;
      }
      .label-container {
        border: 1px solid #000;
        padding: 10mm;
        margin: 0 auto;
        font-family: Arial, sans-serif;
        position: relative;
        background-color: white;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        /* 尺寸将通过JavaScript根据模板动态设置 */
      }
      .label-title {
        font-size: 18px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 10px;
      }
      .label-info {
        font-size: 12px;
        margin-bottom: 5px;
      }
      .barcode-container {
        margin: 15px 0;
        text-align: center;
      }
      .company-info {
        position: absolute;
        bottom: 10mm;
        right: 10mm;
        text-align: right;
      }
      .qr-code {
        position: absolute;
        bottom: 10mm;
        right: 10mm;
        width: 40mm;
        height: 40mm;
      }
      @media print {
        body * {
          visibility: hidden;
        }
        .label-container, .label-container * {
          visibility: visible;
        }
        .label-container {
          position: absolute;
          left: 0;
          top: 0;
          border: none;
        }
      }
      /* 响应式设计 */
      @media (max-width: 992px) {
        .label-generator-container {
          flex-direction: column;
        }
        .selection-panel {
          width: 100%;
          position: static;
        }
      }
  body
    .container.container-main
      h1.mb-4
        i.bi.bi-tag
        span.ms-2 生成发货标签
      
      .label-generator-container
        // 左侧选择区域
        .selection-panel
          div.section-title 选择参数
          
          // SKU选择
          .form-group
            label(for='skuSelect') SKU选择
            select#skuSelect.form-select
              option(value='') -- 请选择SKU --
              each sku in skus
                option(value=sku.sku_code)= sku.sku_code + ' - ' + sku.product_name
          
          // 国家选择
          .form-group
            label(for='countrySelect') 选择国家
            select#countrySelect.form-select
              option(value='') -- 请选择国家 --
              each country in countries
                option(value=country.id)= country.name
          
          // 标签模板选择
          .form-group
            label(for='labelTemplateSelect') 选择标签模板
            select#labelTemplateSelect.form-select
              option(value='') -- 请选择标签模板 --
              each template in labelTemplates
                option(value=template.id)= `模板 ${template.id} (${template.length}x${template.width}mm)`
          
          // 数量输入
          .form-group
            label(for='quantity') 数量
            input#quantity.form-control(type='number', min='1', value='1')
          
          // 操作按钮
          button#generateBtn.btn.btn-primary 生成标签
          button#printBtn.btn.btn-secondary 打印标签
        
        // 右侧预览区域
        .preview-panel
          div.preview-title 标签预览
          
          #loadingIndicator.style('display: none; text-align: center; padding: 50px;')
            i.bi.bi-spinner.bi-spin(style='font-size: 3rem; color: #007bff;')
            p.mt-2 正在生成标签...
          
          #labelPreview
            .label-container
              div.label-title#productName 产品名称
              div.label-info#modelInfo Model: 
              div.label-info#lengthInfo Length: 
              div.label-info#materialInfo Material: 
              div.label-info#techInfo CRI > 80, CCT:6000K
              div.label-info#fluxInfo Luminous Flux: 
              div.label-info#areaInfo Reading Area: 
              div.label-info#madeInfo MADE IN CHINA
              div.label-info#pdInfo PD:28-SEP-25
              div.barcode-container
                svg#barcode
                div#barcodeText
              div.company-info
                img#companyLogo(src='/images/logo.png' alt='公司Logo' style='max-width: 80px; margin-bottom: 5px;')
                div#companyEmail Email: support@homina.top
                div#companyWebsite Forum: http://www.homina.top
              div.qr-code#qrcode
      
    script.
      document.addEventListener('DOMContentLoaded', function() {
        const skuSelect = document.getElementById('skuSelect');
        const countrySelect = document.getElementById('countrySelect');
        const labelTemplateSelect = document.getElementById('labelTemplateSelect');
        const generateBtn = document.getElementById('generateBtn');
        const printBtn = document.getElementById('printBtn');
        const loadingIndicator = document.getElementById('loadingIndicator');
        const labelPreview = document.getElementById('labelPreview');
        
        // 标签模板缓存
        const labelTemplateCache = {};
        
        // 解析URL参数
        function getUrlParams() {
          const params = {};
          const queryString = window.location.search;
          const urlParams = new URLSearchParams(queryString);
          
          urlParams.forEach((value, key) => {
            params[key] = value;
          });
          
          return params;
        }
        
        // 从选择的模板ID获取模板对象
        function getTemplateById(id) {
          if (!id) return null;
          return labelTemplates.find(template => template.id == id);
        }
        
        // 选择变化时启用/禁用生成按钮
        function checkFormValidity() {
          generateBtn.disabled = !(skuSelect.value && countrySelect.value && labelTemplateSelect.value);
        }
        
        // 监听选择变化
        skuSelect.addEventListener('change', checkFormValidity);
        countrySelect.addEventListener('change', checkFormValidity);
        labelTemplateSelect.addEventListener('change', checkFormValidity);
        
        // 初始化按钮状态
        checkFormValidity();
        
        // 检查URL参数并自动填充
        function checkAndFillUrlParams() {
          const urlParams = getUrlParams();
          if (urlParams.sku_code || urlParams.country_code || urlParams.label_id) {
            // 如果有SKU参数，尝试选择对应的选项
            if (urlParams.sku_code) {
              for (let i = 0; i < skuSelect.options.length; i++) {
                if (skuSelect.options[i].value === urlParams.sku_code) {
                  skuSelect.selectedIndex = i;
                  break;
                }
              }
            }
            
            // 如果有国家参数，尝试选择对应的选项
            if (urlParams.country_code) {
              try {
                // 通过国家代码查找对应的选项文本
                for (let i = 0; i < countrySelect.options.length; i++) {
                  // 国家代码通常是国家名称的英文缩写
                  // 这里我们假设国家名称可能包含代码信息
                  if (countrySelect.options[i].text.toLowerCase().includes(urlParams.country_code.toLowerCase()) || 
                      countrySelect.options[i].value === urlParams.country_code) {
                    countrySelect.selectedIndex = i;
                    break;
                  }
                }
              } catch (error) {
                console.warn('国家参数处理出错:', error);
              }
            }
            
            // 如果有标签模板参数，尝试选择对应的选项
            if (urlParams.label_id) {
              try {
                for (let i = 0; i < labelTemplateSelect.options.length; i++) {
                  if (labelTemplateSelect.options[i].value == urlParams.label_id) {
                    labelTemplateSelect.selectedIndex = i;
                    break;
                  }
                }
              } catch (error) {
                console.warn('标签模板参数处理出错:', error);
              }
            }
            
            // 重新检查表单有效性
            checkFormValidity();
            
            // 如果所有必填字段都已填充，则自动生成标签
            if (!generateBtn.disabled) {
              // 稍微延迟一下，确保DOM已经完全渲染
              setTimeout(() => {
                generateBtn.click();
              }, 500);
            }
          }
        }
        
        // 确保页面完全加载后再执行URL参数检查
        window.addEventListener('load', checkAndFillUrlParams);
        
        generateBtn.addEventListener('click', function() {
          const skuCode = skuSelect.value;
          const countryId = countrySelect.value;
          const labelTemplateId = labelTemplateSelect.value;
          const quantity = document.getElementById('quantity').value;
          
          if (!skuCode) {
            showMessage('请选择SKU', 'danger');
            return;
          }
          
          if (!countryId) {
            showMessage('请选择国家', 'danger');
            return;
          }
          
          if (!labelTemplateId) {
            showMessage('请选择标签模板', 'danger');
            return;
          }
          
          // 显示加载状态
          showLoading();
          
          // 获取产品详情 - 使用正确的sku_label API
          axios.get(`/api/sku-label/${skuCode}`)
            .then(function(skuResponse) {
              const sku = skuResponse.data.data;
              
              // 根据选择的国家ID获取国家名称 - 不依赖countries变量
              let countryName = 'N/A';
              for (let i = 0; i < countrySelect.options.length; i++) {
                if (countrySelect.options[i].value == countryId) {
                  countryName = countrySelect.options[i].text;
                  break;
                }
              }
              
              // 获取标签模板详情
              return axios.get(`/api/label/${labelTemplateId}`)
                .then(function(templateResponse) {
                  const template = templateResponse.data.data;
                  
                  // 缓存模板数据
                  labelTemplateCache[labelTemplateId] = template;
                  
                  // 填充标签信息 - 标题包含产品名称和国家
                  document.getElementById('productName').textContent = (sku.product_name || '产品名称') + ' - ' + countryName;
                  document.getElementById('modelInfo').textContent = `Model: ${sku.model || 'N/A'}`;
                  document.getElementById('lengthInfo').textContent = `Length: ${sku.length || 'N/A'} cm`;
                  document.getElementById('materialInfo').textContent = `Material: ${sku.material || 'N/A'}`;
                  document.getElementById('techInfo').textContent = sku.tech_specs || 'CRI > 80, CCT:6000K';
                  document.getElementById('fluxInfo').textContent = `Luminous Flux: ${sku.luminous_flux || 'N/A'}`;
                  document.getElementById('areaInfo').textContent = `Reading Area: ${sku.reading_area || 'N/A'}`;
                  
                  // 添加国家信息
                  document.getElementById('madeInfo').textContent = `MADE IN CHINA for ${countryName}`;
                  
                  // 应用标签模板设置 - 设置标签尺寸
                  const labelContainer = document.querySelector('.label-container');
                  labelContainer.style.width = template.width + 'mm';
                  labelContainer.style.height = template.length + 'mm';
                  
                  // 应用Logo设置
                  if (template.logo_path) {
                    document.getElementById('companyLogo').src = template.logo_path;
                    document.getElementById('companyLogo').style.display = 'block';
                  } else {
                    document.getElementById('companyLogo').style.display = 'none';
                  }
                  
                  if (template.email) {
                    document.getElementById('companyEmail').textContent = `Email: ${template.email}`;
                  } else {
                    document.getElementById('companyEmail').textContent = 'Email: support@homina.top';
                  }
                  
                  if (template.website) {
                    document.getElementById('companyWebsite').textContent = `Website: ${template.website}`;
                  } else {
                    document.getElementById('companyWebsite').textContent = 'Forum: http://www.homina.top';
                  }
                  
                  // 生成条形码 - 使用fnsku
                  const barcodeValue = sku.fnsku || sku.asin || sku.sku_code;
                  document.getElementById('barcodeText').textContent = barcodeValue;
                  JsBarcode('#barcode', barcodeValue, {
                    width: 2,
                    height: 60,
                    displayValue: false
                  });
                  
                  // 调整条码位置到中间靠右
                  const barcodeContainer = document.querySelector('.barcode-container');
                  barcodeContainer.style.textAlign = 'right';
                  barcodeContainer.style.marginTop = '20px';
                  barcodeContainer.style.marginRight = '20px';
                  
                  // 应用二维码设置
                  if (template.qr_code_link) {
                    document.getElementById('qrcode').innerHTML = `<img src="${template.qr_code_link}" alt="QR码" style="width:100%;height:100%;object-fit:contain;">`;
                  } else {
                    // 默认二维码占位
                    document.getElementById('qrcode').innerHTML = '<div style="width:100%;height:100%;background-color:#f0f0f0;display:flex;align-items:center;justify-content:center;">QR码位置</div>';
                  }
                  
                  // 隐藏加载状态，显示预览
                  hideLoading();
                  showMessage('标签生成成功！', 'success');
                  
                  // 启用打印按钮
                  printBtn.disabled = false;
                });
            })
            .catch(function(error) {
              console.error('生成标签失败:', error);
              hideLoading();
              showMessage('生成标签失败，请重试', 'danger');
            });
        });
        
        printBtn.addEventListener('click', function() {
          // 检查是否已生成标签
          if (!document.getElementById('productName').textContent || document.getElementById('productName').textContent === '产品名称') {
            showMessage('请先生成标签', 'warning');
            return;
          }
          
          // 记录打印历史
          const skuCode = skuSelect.value;
          const countryId = countrySelect.value;
          const labelTemplateId = labelTemplateSelect.value;
          const quantity = document.getElementById('quantity').value;
          
          // 静默提交打印记录（不阻塞打印流程）
          axios.post('/api/print-log', {
            sku_code: skuCode,
            country_id: countryId,
            label_template_id: labelTemplateId,
            quantity: quantity,
            printed_at: new Date().toISOString()
          }).catch(function(error) {
            console.error('记录打印日志失败:', error);
            // 不影响打印功能
          });
          
          window.print();
        });
        
        // 显示加载状态
        function showLoading() {
          loadingIndicator.style.display = 'block';
          labelPreview.style.display = 'none';
          generateBtn.disabled = true;
          generateBtn.textContent = '生成中...';
        }
        
        // 隐藏加载状态
        function hideLoading() {
          loadingIndicator.style.display = 'none';
          labelPreview.style.display = 'block';
          generateBtn.disabled = false;
          generateBtn.textContent = '生成标签';
        }
        
        // 显示消息提示
        function showMessage(message, type = 'info') {
          // 检查是否已有消息容器
          let messageContainer = document.getElementById('messageContainer');
          if (!messageContainer) {
            messageContainer = document.createElement('div');
            messageContainer.id = 'messageContainer';
            messageContainer.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 1050; min-width: 300px; max-width: 500px;';
            document.body.appendChild(messageContainer);
          }
          
          // 创建消息元素
          const msg = document.createElement('div');
          msg.className = `alert alert-${type} alert-dismissible fade show`;
          msg.role = 'alert';
          msg.textContent = message;
          
          // 添加关闭按钮
          const closeBtn = document.createElement('button');
          closeBtn.type = 'button';
          closeBtn.className = 'btn-close';
          closeBtn.setAttribute('data-bs-dismiss', 'alert');
          closeBtn.ariaLabel = 'Close';
          msg.appendChild(closeBtn);
          
          // 清空现有消息并添加新消息
          messageContainer.innerHTML = '';
          messageContainer.appendChild(msg);
          
          // 3秒后自动隐藏
          setTimeout(() => {
            msg.classList.remove('show');
            msg.classList.add('fade');
            setTimeout(() => {
              msg.remove();
            }, 500);
          }, 3000);
        }
      });