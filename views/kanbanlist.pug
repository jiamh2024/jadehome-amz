//- views/kanbanList.pug
doctype html
html(lang="zh-CN")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title 看板信息管理
    link(href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet")
    style.
      .table-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 1rem;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
      }
      .urgency-high { color: #dc3545; font-weight: bold; }
      .urgency-medium { color: #ffc107; }
      .urgency-low { color: #28a745; }
      .pagination { justify-content: center; margin-top: 20px; }

  body
    .table-container
      h3.mb-4 看板信息列表
      .d-flex.justify-content-between.mb-3
        a.btn.btn-primary(href="/kbadd") 新建信息
        .form-group
          select#pageLimit.form-select(onchange="loadData()")
            option(value="10") 每页10条
            option(value="20") 每页20条
            option(value="50") 每页50条

      table.table.table-hover
        thead
          tr
            th(scope="col") 创建时间
            th(scope="col") 信息内容
            th(scope="col") 紧急程度
            th(scope="col") 有效期
            th(scope="col") 备注
            th(scope="col") 操作
        tbody#dataBody
          tr
            td(colspan="6" class="text-center") 正在加载数据...

      nav(aria-label="Page navigation")
        ul.pagination#pagination

    script(src="https://cdn.bootcdn.net/ajax/libs/axios/1.2.0/axios.min.js")
    script.
      let currentPage = 1;
      let totalPages = 1;
      const pageSize = parseInt(document.getElementById('pageLimit').value);

      // 初始化加载数据
      document.addEventListener('DOMContentLoaded', () => loadData());

      async function loadData(page = 1) {
        currentPage = page;
        const limit = document.getElementById('pageLimit').value;
        
        try {
          const response = await axios.get(`/api/kanban?page=${page}&limit=${limit}`);
          renderTable(response.data.data);
          renderPagination(response.data.data.pagination);
        } catch (error) {
          console.error('数据加载失败:', error);
          alert('数据加载失败，请稍后重试');
        }
      }

      function renderTable(data) {
        const tbody = document.getElementById('dataBody');
        tbody.innerHTML = data.items.length ? '' : '<tr><td colspan="6" class="text-center">暂无数据</td></tr>';

        data.items.forEach(item => {
          const row = `
            <tr data-id="${item.id}">
              <td>${new Date(item.create_time).toLocaleString()}</td>
              <td>${item.content}</td>
              <td class="urgency-${item.urgency_level === 'h' ? 'high' : item.urgency_level === 'm' ? 'medium' : 'low'}">
                ${item.urgency_level === 'h' ? '高' : item.urgency_level === 'm' ? '中' : '低'}
              </td>
              <td>${item.valid_until}</td>
              <td>${item.notes || '-'}</td>
              <td>
                <button class="btn btn-danger btn-sm" onclick="deleteItem(${item.id})">删除</button>
              </td>
            </tr>
          `;
          tbody.innerHTML += row;
        });
      }

      function renderPagination(pagination) {
        const paginationEl = document.getElementById('pagination');
        paginationEl.innerHTML = '';
        
        // 上一页按钮
        paginationEl.innerHTML += `
          <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="loadData(${currentPage - 1})">上一页</a>
          </li>
        `;

        // 页码按钮
        for (let i = 1; i <= pagination.totalPages; i++) {
          paginationEl.innerHTML += `
            <li class="page-item ${i === currentPage ? 'active' : ''}">
              <a class="page-link" href="#" onclick="loadData(${i})">${i}</a>
            </li>
          `;
        }

        // 下一页按钮
        paginationEl.innerHTML += `
          <li class="page-item ${currentPage >= pagination.totalPages ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="loadData(${currentPage + 1})">下一页</a>
          </li>
        `;
      }

      async function deleteItem(id) {
        if (!confirm('确定要永久删除这条记录吗？')) return;

        try {
          await axios.delete(`/api/kanban/${id}`);
          document.querySelector(`tr[data-id="${id}"]`).remove();
          alert('删除成功');
          loadData(currentPage); // 重新加载当前页
        } catch (error) {
          console.error('删除失败:', error);
          alert(error.response?.data?.message || '删除失败');
        }
      }