//- excel-processor.pug
doctype html
html(lang="zh-CN")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Excel模板处理器
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css", rel="stylesheet")
    script(src="https://cdn.bootcdn.net/ajax/libs/exceljs/4.4.0/exceljs.bare.js")
    script(src="https://cdn.jsdelivr.net/npm/axios@1.5.0/dist/axios.min.js")
    style.
      .processor-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 2rem;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
      }
      .loading {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255,255,255,0.8);
        z-index: 1000;
      }

  body
    .processor-container
      h2.mb-4 Excel模板处理器
      .mb-3
        label.form-label 国家编码
        select#country.form-select
          option(value="") -- 请选择国家 --
          option(value="US") 美国
          option(value="UK") 英国
          option(value="CA") 加拿大
      .mb-3
        label.form-label 产品SKU
        input#sku.form-control(type="text", placeholder="输入SKU编码")
      .mb-3
        label.form-label 上传模板文件
        input#fileInput.form-control(type="file", accept=".xlsx")
      button#processBtn.btn.btn-primary 处理文件
      #message.alert.mt-3(style="display: none")

    script.
      let specsData = null;

      // 显示加载状态
      function showLoading(show) {
        //document.querySelector('.loading').style.display = show ? 'flex' : 'none';
      }

      // 显示消息
      function showMessage(msg, type) {
        const msgEl = document.getElementById('message');
        msgEl.textContent = msg;
        msgEl.className = `alert alert-${type}`;
        msgEl.style.display = 'block';
        setTimeout(() => msgEl.style.display = 'none', 5000);
      }

      // 获取规格数据
      async function fetchSpecs() {
        const country = document.getElementById('country').value;
        const sku = document.getElementById('sku').value.trim();
        
        if (!country || !sku) {
          showMessage('请选择国家和输入SKU', 'danger');
          return null;
        }

        try {
          const response = await axios.get('/api/kv', {
            params: { sku_code: sku, country_code: country }
          });
          return response.data.length > 0 ? response.data : null;
        } catch (error) {
          showMessage('获取规格数据失败: ' + error.message, 'danger');
          return null;
        }
      }

      // 处理Excel文件
      async function processExcel(file) {
        showLoading(true);
        try {
          // 读取文件
          const arrayBuffer = await file.arrayBuffer();
          const workbook = new ExcelJS.Workbook();
          await workbook.xlsx.load(arrayBuffer);

          // 获取第一个工作表
          const worksheet = workbook.getWorksheet(1);
          if (!worksheet) throw new Error('文件不包含有效的工作表');

          // 创建列映射
          const headerRow = worksheet.getRow(1);
          const columnMap = {};
          headerRow.eachCell((cell, colNumber) => {
            columnMap[cell.value] = colNumber;
          });

          // 添加新行并复制样式
          const newRowNumber = worksheet.rowCount + 1;
          const newRow = worksheet.getRow(newRowNumber);

          // 获取参考行样式（最后一行）
          const refRow = worksheet.getRow(worksheet.rowCount);
          
          specsData.forEach(({ spec_key, spec_value }) => {
            const col = columnMap[spec_key];
            if (col) {
              const cell = newRow.getCell(col);
              cell.value = spec_value;
              
              // 复制参考单元格样式
              const refCell = refRow.getCell(col);
              cell.style = JSON.parse(JSON.stringify(refCell.style)); // 深拷贝样式
            }
          });

          // 处理合并单元格
          worksheet.mergedCells.forEach(mergedCell => {
            if (mergedCell.bottom === worksheet.rowCount) {
              worksheet.mergeCells(
                mergedCell.left,
                newRowNumber,
                mergedCell.right,
                newRowNumber
              );
            }
          });

          // 生成新文件
          const buffer = await workbook.xlsx.writeBuffer();
          return new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
        } catch (error) {
          showMessage('文件处理失败: ' + error.message, 'danger');
          throw error;
        } finally {
          showLoading(false);
        }
      }

      // 事件处理
      document.getElementById('processBtn').addEventListener('click', async () => {
        try {
          const fileInput = document.getElementById('fileInput');
          const file = fileInput.files[0];
          if (!file) {
            showMessage('请选择要上传的文件', 'danger');
            return;
          }

          // 获取规格数据
          specsData = await fetchSpecs();
          if (!specsData || specsData.length === 0) {
            showMessage('未找到相关规格数据', 'warning');
            return;
          }

          // 处理文件
          const processedBlob = await processExcel(file);
          
          // 下载文件
          const url = URL.createObjectURL(processedBlob);
          const a = document.createElement('a');
          a.href = url;
          a.download = `processed_${file.name}`;
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
          URL.revokeObjectURL(url);

          showMessage('文件处理完成，已开始下载', 'success');
        } catch (error) {
          console.error('处理流程错误:', error);
        }
      });