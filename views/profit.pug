//- views/profit-calculator.pug
doctype html
html(lang="zh-CN")
  head
    title 竞品利润计算器
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet")
    link(href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet")

    style.
      .container-main {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
      }
      .card {
        margin-bottom: 2rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
      }
      .result-card {
        border-left: 4px solid #0d6efd;
        background-color: #f8f9fa;
      }
      .dimension-inputs {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
      }
      .dimension-inputs .input-group {
        flex: 1;
        min-width: 150px;
      }
      .unit-badge {
        font-size: 0.8rem;
        margin-left: 0.5rem;
        color: #6c757d;
      }
      .profit-metric {
        font-size: 1.1rem;
        margin-bottom: 0.8rem;
      }
      .profit-value {
        font-weight: bold;
      }
      .positive-profit {
        color: #28a745;
      }
      .negative-profit {
        color: #dc3545;
      }
      .cost-breakdown {
        background-color: #f8f9fa;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-top: 1rem;
      }

  body
    .container.container-main
      h1.mb-4
        i.bi.bi-calculator
        span.ms-2 竞品利润计算器
        small.text-muted.ms-2 （支持多单位计算）

      .row
        .col-lg-8
          .card
            .card-header.bg-light
              h5.mb-0 计算参数
            .card-body
              form#profitCalculatorForm
                .row.mb-3
                  .col-md-6
                    label.form-label(for="productSelect") 选择竞品
                    select#productSelect.form-select
                      option(value="") -- 选择竞品 --
                  .col-md-6
                    label.form-label(for="countrySelect") 目标国家
                    select#countrySelect.form-select
                      option(value="") -- 选择国家 --

                .row.mb-3
                  .col-md-6
                    label.form-label(for="purchasePrice") 采购价格
                    .input-group
                      span.input-group-text ¥
                      input#purchasePrice.form-control(type="number" step="0.01" min="0" required)
                  .col-md-6
                    label.form-label(for="shippingRate") 海运单价
                    .input-group
                      span.input-group-text ¥
                      input#shippingRate.form-control(type="number" step="0.01" min="0" value="25")
                      span.input-group-text /kg

                .row.mb-3
                  .col-md-12
                    label.form-label 产品尺寸
                    .dimension-inputs
                      .input-group
                        span.input-group-text 长
                        input#length.form-control(type="number" step="0.01" min="0")
                        span.input-group-text.unit-display cm
                      .input-group
                        span.input-group-text 宽
                        input#width.form-control(type="number" step="0.01" min="0")
                        span.input-group-text.unit-display cm
                      .input-group
                        span.input-group-text 高
                        input#height.form-control(type="number" step="0.01" min="0")
                        span.input-group-text.unit-display cm
                  .col-md-6
                    label.form-label 产品重量
                    .dimension-inputs
                      .input-group
                        span.input-group-text 重量
                        input#weight.form-control(type="number" step="0.001" min="0")
                        span.input-group-text.unit-label kg

                .row.mb-3
                  .col-md-6
                    label.form-label(for="salePrice") 销售价格
                    .input-group
                      span.input-group-text.currency-symbol $
                      input#salePrice.form-control(type="number" step="0.01" min="0" required)
                      span.input-group-text.currency-code USD
                  .col-md-6
                    label.form-label(for="exchangeRate") 汇率
                    .input-group
                      span.input-group-text 1= 
                      input#exchangeRate.form-control(type="number" step="0.001" min="0" required)
                      span.input-group-text ¥ 

                .d-grid.gap-2
                  button.btn.btn-primary.btn-lg(type="submit")
                    i.bi.bi-calculator
                    span.ms-2 计算利润

        .col-lg-4
          .card.result-card
            .card-header.bg-light
              h5.mb-0 计算结果
            .card-body
              .profit-metric
                | 销售价格: 
                span.profit-value#salePriceResult -
              .profit-metric
                | 总成本: 
                span.profit-value#totalCostResult -
              .profit-metric
                | 毛利率: 
                span.profit-value#grossMarginResult -
              
              .cost-breakdown.mt-3
                h6 成本明细
                .profit-metric
                  | 采购成本: 
                  span#purchaseCostResult -
                .profit-metric
                  | 海运费用: 
                  span#shippingCostResult -
                .profit-metric
                  | VAT税费: 
                  span#vatCostResult -
                .profit-metric
                  | AMZ佣金: 
                  span#amzCommissionResult -
                .profit-metric
                  | 当地运费: 
                  span#localShippingResult -
                .profit-metric
                  | 单位换算: 
                  span#unitConversionResult -

      .card.mt-4
        .card-header.bg-light
          h5.mb-0 历史计算记录
        .card-body
          table#historyTable.table.table-striped.table-hover
            thead
              tr
                th 产品
                th 国家
                th 销售价
                th 毛利率
                th 时间
                th 操作
            tbody
              tr
                td(colspan="6" class="text-center") 暂无历史记录

    script(src="https://code.jquery.com/jquery-3.7.0.min.js")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js")
    script(src="javascripts/shipping.js")
    script.
      $(document).ready(function() {
        // 单位转换系数
        const unitConversions = {
          length: {
            'cm': 1,
            'inch': 2.54 // 1 inch = 2.54 cm
          },
          weight: {
            'kg': 1,
            'lb': 0.453592 // 1 lb = 0.453592 kg
          }
        };

        // 加载竞品和国家数据
        Promise.all([
          fetch('/api/cp').then(res => res.json()),
          fetch('/api/country').then(res => res.json())
        ]).then(([competitors, countries]) => {
          // 填充竞品选择框
          const productSelect = $('#productSelect');
          competitors.forEach(comp => {
            productSelect.append(`<option value="${comp.id}" 
              data-country="${comp.country_code}"
              data-length="${comp.length || ''}" 
              data-width="${comp.width || ''}" 
              data-height="${comp.height || ''}" 
              data-weight="${comp.weight || ''}"
              data-price="${comp.sale_price || ''}"> 
              ${comp.product_name} (${comp.brand})
            </option>`);
          });

          // 填充国家选择框
          const countrySelect = $('#countrySelect');
          countries.forEach(country => {
            countrySelect.append(`<option value="${country.country_code}" 
              data-vat="${country.vat_rate}" 
              data-commission="${country.amz_commission_rate}" 
              data-shipping="${country.shipping_cost}"
              data-exchange="${country.exchange_rate_to_cny}"
              data-currency="${country.currency_code}"
              data-currency-label="${country.currency_unit}"
              data-length-unit="${country.length_unit || 'cm'}"
              data-weight-unit="${country.weight_unit || 'kg'}"> 
              ${country.country_name} (${country.country_code})
            </option>`);
          });
          
          // 解析URL参数并填充表单
          const urlParams = new URLSearchParams(window.location.search);
          const productId = urlParams.get('product_id');
          
          if (productId) {
            // 设置选中的产品
            productSelect.val(productId);
            
            // 如果产品信息在URL参数中提供了，直接使用
            const productName = urlParams.get('product_name');
            const brand = urlParams.get('brand');
            const countryCode = urlParams.get('country_code');
            const length = urlParams.get('length');
            const width = urlParams.get('width');
            const height = urlParams.get('height');
            const weight = urlParams.get('weight');
            const salePrice = urlParams.get('sale_price');
            const purchaseCost = urlParams.get('purchase_cost');
            
            // 填充表单字段
            if (length) $('#length').val(length);
            if (width) $('#width').val(width);
            if (height) $('#height').val(height);
            if (weight) $('#weight').val(weight);
            if (salePrice) $('#salePrice').val(salePrice);
            if (purchaseCost) $('#purchasePrice').val(purchaseCost);
            
            // 设置选中的国家
            if (countryCode) {
              $('#countrySelect').val(countryCode);
              
              // 触发国家选择变化事件，更新单位和货币显示
              $('#countrySelect').trigger('change');
            }
          }
        });

        // 竞品选择变化时自动填充数据
        $('#productSelect').change(function() {
          const selectedOption = $(this).find('option:selected');
          if (selectedOption.val()) {
            $('#length').val(selectedOption.data('length'));
            $('#width').val(selectedOption.data('width'));
            $('#height').val(selectedOption.data('height'));
            $('#weight').val(selectedOption.data('weight'));
            $('#salePrice').val(selectedOption.data('price'));
            //更新国家选择框
            $('#countrySelect').val(selectedOption.data('country'));
          }
          const selectedOption2 = $('#countrySelect').find('option:selected');
          if (selectedOption2.val()) {
            // 更新货币显示
            const currencyCode = selectedOption2.data('currency');
            const currencySymbol = selectedOption2.data('currency-label');
            $('.currency-symbol').text(currencySymbol);
            $('.currency-code').text(currencyCode);
            
            // 更新汇率和海运价格
            $('#exchangeRate').val(selectedOption2.data('exchange'));
            $('#shippingRate').val(selectedOption2.data('shipping')); // 海运单价
            
            // 更新单位显示
            const lengthUnit = selectedOption2.data('length-unit');
            const weightUnit = selectedOption2.data('weight-unit');
            $('.unit-display').text(lengthUnit); // 尺寸单位
            $('.unit-label').text(weightUnit);   // 重量单位
          }
        });

        // 国家选择变化时自动更新单位和货币，并转换数值
        $('#countrySelect').change(function() {
          const selectedOption = $(this).find('option:selected');
          if (selectedOption.val()) {
            // 保存当前输入的数值
            const currentLength = parseFloat($('#length').val()) || 0;
            const currentWidth = parseFloat($('#width').val()) || 0;
            const currentHeight = parseFloat($('#height').val()) || 0;
            const currentWeight = parseFloat($('#weight').val()) || 0;
            
            // 获取当前显示的单位
            const currentLengthUnit = $('.unit-display').first().text();
            const currentWeightUnit = $('.unit-label').text();
            
            // 更新货币显示
            const currencyCode = selectedOption.data('currency');
            const currencySymbol = selectedOption.data('currency-label');
            $('.currency-symbol').text(currencySymbol);
            $('.currency-code').text(currencyCode);
            
            // 更新汇率和海运价格
            $('#exchangeRate').val(selectedOption.data('exchange'));
            $('#shippingRate').val(selectedOption.data('shipping')); // 海运单价
            
            // 获取新的单位
            const newLengthUnit = selectedOption.data('length-unit');
            const newWeightUnit = selectedOption.data('weight-unit');
            
            // 计算转换后的数值
            let convertedLength = currentLength;
            let convertedWidth = currentWidth;
            let convertedHeight = currentHeight;
            let convertedWeight = currentWeight;
            
            // 尺寸单位转换
            if (currentLengthUnit !== newLengthUnit) {
              if ((currentLengthUnit === 'cm' || currentLengthUnit === '厘米') && 
                  (newLengthUnit === 'inch' || newLengthUnit === '英寸')) {
                // 厘米 -> 英寸
                convertedLength = (currentLength / 2.54).toFixed(2);
                convertedWidth = (currentWidth / 2.54).toFixed(2);
                convertedHeight = (currentHeight / 2.54).toFixed(2);
              } else if ((currentLengthUnit === 'inch' || currentLengthUnit === '英寸') && 
                         (newLengthUnit === 'cm' || newLengthUnit === '厘米')) {
                // 英寸 -> 厘米
                convertedLength = (currentLength * 2.54).toFixed(2);
                convertedWidth = (currentWidth * 2.54).toFixed(2);
                convertedHeight = (currentHeight * 2.54).toFixed(2);
              }
            }
            
            // 重量单位转换
            if (currentWeightUnit !== newWeightUnit) {
              if ((currentWeightUnit === 'kg' || currentWeightUnit === '千克') && 
                  (newWeightUnit === 'lb' || newWeightUnit === '磅')) {
                // 千克 -> 磅
                convertedWeight = (currentWeight / 0.453592).toFixed(3);
              } else if ((currentWeightUnit === 'lb' || currentWeightUnit === '磅') && 
                         (newWeightUnit === 'kg' || newWeightUnit === '千克')) {
                // 磅 -> 千克
                convertedWeight = (currentWeight * 0.453592).toFixed(3);
              }
            }
            
            // 更新数值和单位显示
            $('#length').val(convertedLength);
            $('#width').val(convertedWidth);
            $('#height').val(convertedHeight);
            $('#weight').val(convertedWeight);
            $('.unit-display').text(newLengthUnit); // 尺寸单位
            $('.unit-label').text(newWeightUnit);   // 重量单位
          }
        });

        // 计算AMZ当地运费 (考虑单位)
        function calculateLocalShipping(length, width, height, weight, countryCode, lengthUnit, weightUnit, salePrice) {
          // 转换为标准单位(cm和kg)进行计算 - 兼容中英文单位
          const lengthCm = (lengthUnit === '英寸' || lengthUnit === 'inch') ? length * 2.54 : length;
          const widthCm = (lengthUnit === '英寸' || lengthUnit === 'inch') ? width * 2.54 : width;
          const heightCm = (lengthUnit === '英寸' || lengthUnit === 'inch') ? height * 2.54 : height;
          const weightKg = (weightUnit === '磅' || weightUnit === 'lb') ? weight * 0.453592 : weight;
          
          // 这里是简化示例，实际应根据亚马逊的运费计算规则实现
          if (!length || !width || !height || !weight) return 0;
          
          const volume = length * width * height;
          
          // 示例计算规则
          if (countryCode === 'US') {
            return calculateUSShippingFee(length, width, height, weight, salePrice);
          } else if (countryCode === 'UK') {
            return calculateUKShippingFee(length, width, height, weight, salePrice);
          } else if (countryCode === 'CA') {
            return calculateCanadaShippingFee(length, width, height, weight, salePrice);
          } else if (countryCode === 'SA') {
            return calculateSaudiShippingFee(length, width, height, weight, salePrice);
          } else if (countryCode === 'AE') {
            return calculateUAEShippingFee(length, width, height, weight, salePrice);
          } else {
            return 0.0;
          }
        }

        // 表单提交计算利润
        $('#profitCalculatorForm').submit(function(e) {
          e.preventDefault();
           
          // 获取输入值
          const purchasePrice = parseFloat($('#purchasePrice').val()) || 0;
          const shippingRate = parseFloat($('#shippingRate').val()) || 0;
          const length = parseFloat($('#length').val()) || 0;
          const width = parseFloat($('#width').val()) || 0;
          const height = parseFloat($('#height').val()) || 0;
          const weight = parseFloat($('#weight').val()) || 0;
          const salePrice = parseFloat($('#salePrice').val()) || 0;
          const exchangeRate = parseFloat($('#exchangeRate').val()) || 1;
           
          const countryOption = $('#countrySelect option:selected');
          const vatRate = parseFloat(countryOption.data('vat')) / 100 || 0;
          const commissionRate = parseFloat(countryOption.data('commission')) / 100 || 0;
          const countryCode = countryOption.val();
          const currencyCode = countryOption.data('currency');
          const lengthUnit = countryOption.data('length-unit') || 'cm';
          const weightUnit = countryOption.data('weight-unit') || 'kg';
           
          const productOption = $('#productSelect option:selected');
          const productName = productOption.text().trim();
           
          // 计算各项成本（考虑单位转换）
          const purchaseCost = purchasePrice;
           
          // 海运费用（现在考虑体积重）
          // 1. 转换为千克的实际重量
          // 兼容'磅'和'lb'两种单位表示
          const weightKg = (weightUnit === '磅' || weightUnit === 'lb') ? weight * 0.453592 : weight;
          
          // 2. 计算体积重量（千克）
          let dimensionalWeightKg = 0;
          if (length && width && height) {
              // 转换为厘米的尺寸
              // 兼容'英寸'和'inch'两种单位表示
              const lengthCm = (lengthUnit === '英寸' || lengthUnit === 'inch') ? length * 2.54 : length;
              const widthCm = (lengthUnit === '英寸' || lengthUnit === 'inch') ? width * 2.54 : width;
              const heightCm = (lengthUnit === '英寸' || lengthUnit === 'inch') ? height * 2.54 : height;
              
              // 海运体积重计算公式通常为：长×宽×高/6000（单位：cm，结果：kg）
              dimensionalWeightKg = (lengthCm * widthCm * heightCm) / 6000;
          }
          
          // 3. 取实际重量和体积重量中的较大者作为计费重量
          const billableWeight = Math.max(weightKg, dimensionalWeightKg);
          const shippingCost = billableWeight * shippingRate;
          
          // 当地运费（自动计算）
          const localShipping = calculateLocalShipping(
            length, width, height, weight, 
            countryCode, lengthUnit, weightUnit, salePrice
          );
          
          // 税费和佣金（外币）
          const vatCost = salePrice * vatRate;
          const amzCommission = salePrice * commissionRate;
          
          // 转换为人民币
          const salePriceCNY = salePrice * exchangeRate;
          const totalCostCNY = purchaseCost + shippingCost + 
                             (vatCost + amzCommission + localShipping) * exchangeRate;
          
          // 计算毛利率
          const grossProfit = salePriceCNY - totalCostCNY;
          const grossMargin = (grossProfit / salePriceCNY) * 100;
          
          // 显示结果
          $('#salePriceResult').text(`${salePrice.toFixed(2)} ${currencyCode} (¥${salePriceCNY.toFixed(2)})`);
          $('#totalCostResult').text(`¥${totalCostCNY.toFixed(2)}`);
          
          const marginClass = grossMargin >= 0 ? 'positive-profit' : 'negative-profit';
          $('#grossMarginResult').html(`<span class="${marginClass}">${grossMargin.toFixed(2)}%</span>`);
          
          // 显示成本明细
          $('#purchaseCostResult').text(`¥${purchaseCost.toFixed(2)}`);
          
          // 更新海运费用显示，增加体积重信息
          let shippingDetail = `¥${shippingCost.toFixed(2)}`;
          if (dimensionalWeightKg > weightKg) {
              shippingDetail += ` (体积重: ${dimensionalWeightKg.toFixed(2)}kg > 实际重: ${weightKg.toFixed(2)}kg)`;
          } else if (dimensionalWeightKg > 0) {
              shippingDetail += ` (实际重: ${weightKg.toFixed(2)}kg > 体积重: ${dimensionalWeightKg.toFixed(2)}kg)`;
          }
          $('#shippingCostResult').text(shippingDetail);
          
          $('#vatCostResult').text(`${(vatRate*100).toFixed(2)}% = ${vatCost.toFixed(2)} ${currencyCode}`);
          $('#amzCommissionResult').text(`${(commissionRate*100).toFixed(2)}% = ${amzCommission.toFixed(2)} ${currencyCode}`);
          $('#localShippingResult').text(`${localShipping.toFixed(2)} ${currencyCode}`);
          $('#unitConversionResult').text(`尺寸: ${lengthUnit}→cm, 重量: ${weightUnit}→kg`);
          
          // 添加到历史记录
          const now = new Date();
          const timeString = now.toLocaleTimeString();
          
          $('#historyTable tbody').prepend(`
            <tr>
              <td>${productName}</td>
              <td>${countryOption.text()}</td>
              <td>${salePrice.toFixed(2)} ${currencyCode}</td>
              <td class="${marginClass}">${grossMargin.toFixed(2)}%</td>
              <td>${timeString}</td>
              <td>
                <button class="btn btn-sm btn-outline-primary reuse-btn"
                  data-length="${length}" data-width="${width}" data-height="${height}"
                  data-weight="${weight}" data-price="${salePrice}"
                  data-purchase="${purchasePrice}" data-shipping="${shippingRate}">
                  复用
                </button>
              </td>
            </tr>
          `);
          
          // 移除"暂无历史记录"提示
          $('#historyTable td[colspan="6"]').remove();
        });

        // 历史记录复用功能
        $(document).on('click', '.reuse-btn', function() {
          $('#length').val($(this).data('length'));
          $('#width').val($(this).data('width'));
          $('#height').val($(this).data('height'));
          $('#weight').val($(this).data('weight'));
          $('#salePrice').val($(this).data('price'));
          $('#purchasePrice').val($(this).data('purchase'));
          $('#shippingRate').val($(this).data('shipping'));
          
          // 滚动到表单顶部
          $('html, body').animate({
            scrollTop: $('#profitCalculatorForm').offset().top - 20
          }, 500);
        });
      });